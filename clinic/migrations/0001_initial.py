# Generated by Django 3.1.4 on 2022-02-24 19:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mylib.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppoinmentReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Review Date')),
                ('rate', models.IntegerField(verbose_name='Rate')),
                ('recommend', models.BooleanField(default=False, verbose_name='Recommend')),
                ('text', models.CharField(blank=True, max_length=150, verbose_name='Review Title')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=50, verbose_name='Purpose')),
                ('amount', models.FloatField(default=0.0, verbose_name='Amount')),
                ('status', models.CharField(choices=[('WAITING', 'Waiting'), ('CONFIRMED', 'Confirmed'), ('RESCHEDULED', 'Rescheduled'), ('CANCELED', 'Canceled'), ('PAID', 'Paid'), ('COMPLETED', 'Completed')], max_length=20, verbose_name='Status')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Appointment Date')),
                ('date_of_appointment', models.DateTimeField(verbose_name='Date Of Appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('quantity', models.FloatField(default=1.0, verbose_name='Quantity')),
                ('vat', models.FloatField(default=0.0, verbose_name='V.A.T')),
                ('amount', models.FloatField(default=0.0, verbose_name='Amount')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Dr.', max_length=200, verbose_name='Title')),
                ('biography', models.CharField(blank=True, max_length=1000, verbose_name='Biography')),
                ('pricing', models.FloatField(default=0.0, verbose_name='Amount')),
                ('services', models.CharField(blank=True, max_length=1000, verbose_name='Services')),
                ('specialization', models.CharField(blank=True, max_length=1000, verbose_name='Specialization')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=10, verbose_name='Day')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(choices=[('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+'), ('O-', 'O-'), ('O+', 'O+'), ('NS', 'Not Set')], default='NS', max_length=5, verbose_name='Blood Group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('number_of_appointments', models.IntegerField(default=1, verbose_name='Number Of Appointments')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctorschedule')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('url', models.URLField(verbose_name='URL')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Review Date')),
                ('text', models.CharField(max_length=150, verbose_name='Review Title')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.appoinmentreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('registration', models.CharField(max_length=50, verbose_name='Registration')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Prescription Date')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('quantity', models.FloatField(default=0.0, verbose_name='Quantity')),
                ('days', models.FloatField(default=0.0, verbose_name='Prescription Days')),
                ('morning', models.BooleanField(default=False, verbose_name='Morning')),
                ('afternoon', models.BooleanField(default=False, verbose_name='Afternoon')),
                ('evening', models.BooleanField(default=False, verbose_name='Evening')),
                ('night', models.BooleanField(default=False, verbose_name='Night')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership', models.CharField(max_length=50, verbose_name='Membership')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateField(verbose_name='Record Date')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='Description')),
                ('attachment', models.FileField(blank=True, upload_to='File/Patient/MedicalRecords/', verbose_name='Attachment')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Added Date')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patient')),
            ],
        ),
        migrations.CreateModel(
            name='LikedReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommend', models.BooleanField(default=False, verbose_name='Recommend')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.appoinmentreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikedReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommend', models.BooleanField(default=False, verbose_name='Recommend')),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.reply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateTimeField(auto_now_add=True, verbose_name='Paid On')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.appointment')),
                ('bills', models.ManyToManyField(to='clinic.Bill')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fav_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=50, verbose_name='Hospital/Clinic')),
                ('start_date', models.DateField(verbose_name='From')),
                ('end_date', models.DateField(blank=True, verbose_name='To')),
                ('designation', models.CharField(max_length=50, verbose_name='Designation')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=50, verbose_name='Degree')),
                ('institute', models.CharField(max_length=50, verbose_name='College/Institute')),
                ('date_of_completion', models.DateField(verbose_name='Date of Completion')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='doctor',
            name='speciality',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.speciality'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to=mylib.image.scramble, verbose_name='uploads')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('county', models.CharField(blank=True, max_length=100, null=True, verbose_name='County')),
                ('town', models.CharField(blank=True, max_length=100, null=True, verbose_name='Town')),
                ('street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Street')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('description', models.CharField(blank=True, max_length=1000, verbose_name='Description')),
                ('doctors', models.ManyToManyField(to='clinic.Doctor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award', models.CharField(max_length=50, verbose_name='Award')),
                ('date', models.DateField(verbose_name='Date')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='follow_up_appointment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.appointment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patient'),
        ),
        migrations.AddField(
            model_name='appoinmentreview',
            name='appointment',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.appointment'),
        ),
    ]
