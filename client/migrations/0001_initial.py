# Generated by Django 3.1.4 on 2022-02-22 14:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mylib.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('phone', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to=mylib.image.scramble, verbose_name='uploads')),
                ('confirm_code', models.IntegerField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('reset_code', models.IntegerField(blank=True, null=True)),
                ('old_password', models.CharField(blank=True, editable=False, max_length=55, null=True)),
                ('changed_password', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('NS', 'Not Set')], default='NS', max_length=10)),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('county', models.CharField(blank=True, max_length=100, null=True, verbose_name='County')),
                ('town', models.CharField(blank=True, max_length=100, null=True, verbose_name='Town')),
                ('street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Street')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_url', models.URLField(max_length=256)),
                ('request_method', models.CharField(max_length=10)),
                ('response_code', models.CharField(max_length=3)),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('device', models.CharField(blank=True, max_length=1000, null=True)),
                ('browser', models.CharField(blank=True, max_length=1000, null=True)),
                ('os', models.CharField(blank=True, max_length=1000, null=True)),
                ('extra_data', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
    ]
